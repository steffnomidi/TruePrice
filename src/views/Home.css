/* reset css */
@charset "utf-8";
/***
    The new CSS reset - version 1.8.5 (last updated 14.6.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/
html, body {
    width: 100%;
    height: 100%;
}
/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
    - The "html" attribute is exclud, because otherwise a bug in Chrome breaks the CSS hyphens property (https://github.com/elad2412/the-new-css-reset/issues/36)
 */
*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
    all: unset;
    display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
    cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
    list-style: none;
}

/* For images to not be able to exceed their container */
img {
    max-inline-size: 100%;
    max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
    border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input,
textarea {
    -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
    white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
    -webkit-appearance: revert;
    appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
    all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
    color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
    content: initial;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
    display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element */
:where([contenteditable]:not([contenteditable="false"])) {
    -moz-user-modify: read-write;
    -webkit-user-modify: read-write;
    overflow-wrap: break-word;
    -webkit-line-break: after-white-space;
    -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
    -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
    all: revert;
}

/* end reset css */

.remove-arrow::-webkit-inner-spin-button,
.remove-arrow::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.remove-arrow {
    -moz-appearance: textfield;
}

::placeholder {
    color: #aaa;
    opacity: 1;
    /* Firefox */
}

::-ms-input-placeholder {
    /* Edge 12 -18 */
    color: #aaa!important;
}

#screen {
    display: flex;
    flex-direction: column;
    height: 100dvh;
    max-height: 100%;
    justify-content: space-between;
}

#table {
    display: none;
    padding: .5em 1em;
    border: 4px solid #aaa;
    border-radius: 1em;
    margin-bottom: 1.5em;
    position: relative;
}
#table .clear {
    position: absolute;
    top: .3em;
    right: .5em;
    font-size: 1.4em;
    cursor: pointer;
}

#table.active {
    display: block;
}

#table table {
    width: 100%;
    font-size: calc( 1.5vh + 1vw);
    border-spacing: .5em;
}

#table table .suptitle {
    color: #aaa;
    font-size: .6em;
}


#result {
    position: relative;
    display: flex;
    flex-direction: column;
    flex-grow: 11;
    justify-content: space-between;
}
#githublink {
    position: absolute;
    left: .5em;
    bottom: .5em;
}

#params {
    flex-grow: 5;
    display: flex;
    flex-direction: column;
}

#params .card {
    flex-grow: 1;
}

.container {
    max-width: 800px;
    margin: auto;
    width: 100%;
    padding: 15px;
}

.card {
    margin-bottom: 20px;
    padding: 15px;
    border: 4px solid #aaa;
    border-radius: 1em;
    min-height: 1em;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.card.result {
    border-color: #37963c;
}

.card.result .header {
    display: flex;
    justify-content: space-between;
}

.card.result .header .memoryPlus {
    display: none;
}

.card.result .header .memoryPlus.active {
    display: block;
    cursor: pointer;
}

.col.card {
    border-color: #ffae00;
}

.col.card .title {
    color: #aaa;
    font-size: calc(2vh + .3vw);
}

.col.card input {
    display: block;
    height: auto;
    width: 100%;
    padding: 0;
    text-align: center;
    font-size: calc(3vh + 3vw);
}

h1 {
    font-size: calc(1.5vh + 1.5vw);
    font-weight: 600;
}

.result-text {
    padding: 0;
    font-size: calc(4vh + 2.5vw);
    font-weight: 500;
    text-align: center;
}

.description {
    font-size: 1rem;
    color: #aaa;
    font-weight: 500;
    text-align: right;
    font-size: calc(2vh + .5vw);
}

.variants {
    flex-grow: 1;
}

.variants button {
    background-color: #555;
    padding: .5rem 1rem;
    text-align: center;
    color: #fff;
    width: 100%;
    font-size: calc(2vh + .5vw);
    height: 100%;
    cursor: pointer
}

.variants button.active {
    opacity: .8;
    cursor: default
}

.row.variants {
    display: flex;
    width: 100%;
    max-width: 100%;
}

.row.variants .col {
    flex-grow: 1;
}

@media screen and (min-width: 600px) {
    .row#params {
        display: flex;
        flex-direction: row;
        width: 100%;
        max-width: 100%;
        gap: 1.5rem;
    }

    .row .col {
        flex-grow: 1;
    }
}